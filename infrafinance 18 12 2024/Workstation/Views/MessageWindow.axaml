<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        x:Class="Workstation.MessageWindow"
        Title="MessageWindow"
		Width="400"
		Height="200"
		MinWidth="40"
		MinHeight="150"
		MaxWidth="800"
		MaxHeight="800"
		WindowStartupLocation="CenterScreen"		
		Topmost="True"
		>
	
	<!--Свойство Topmost="True" в окне Avalonia (или WPF) означает, 
	что окно будет всегда отображаться поверх всех остальных окон, включая окна других приложений.-->

	<Grid ColumnDefinitions="50,*">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<Image
            x:Name="MessageIcon"
            Grid.Row="0"
            Grid.Column="0"
            Width="50"
            Height="50"
            Margin="5"
            VerticalAlignment="Top" />

		<TextBlock
            x:Name="MessageTB"
            Grid.Row="0"
            Grid.Column="1"
            Margin="10,10,15,10"
            TextWrapping="Wrap" />
        <!--Wrap: Текст автоматически переносится на новую строку, 
		если он выходит за пределы ширины элемента.-->

		<CheckBox
					x:Name="DatailsCB"
					Grid.Row="1"
					Grid.Column="0"
					Grid.ColumnSpan="2"
					Margin="10,0,0,0">
			<TextBlock Text="Детальная информация" FontSize="12" />
		</CheckBox>
		<!--Click в элементах CheckBox и Button не поддерживает указание значения в виде строки (например, Click="DetailsCB_Click").
В Avalonia обработчики событий должны задаваться через делегаты или привязки, а не как текстовые строки, как в WPF.-->
		<!--Вместо указания обработчиков напрямую в XAML, нужно использовать код на C# для привязки событий.-->

		<!--`ScrollViewer` — это контейнер, который позволяет прокручивать содержимое, если оно не помещается в доступное пространство.-->
		<ScrollViewer
            Grid.Row="2"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            VerticalScrollBarVisibility="Auto">
			<TextBlock
                x:Name="DatailsTB"
                Margin="10,10,15,10"
                TextWrapping="Wrap"
                IsVisible="False" />
		</ScrollViewer>
		<!--Grid.Column="0" и Grid.ColumnSpan="2":
Указывает, что ScrollViewer занимает два столбца сетки, начиная с первого (нумерация столбцов начинается с 0).-->
        <!--VerticalScrollBarVisibility="Auto":
Указывает, что вертикальная полоса прокрутки будет отображаться автоматически, если содержимое не умещается по высоте.
Auto: Полоса прокрутки появляется только при необходимости.
Visible: Полоса прокрутки всегда отображается.
Hidden: Полоса прокрутки скрыта, даже если содержимое превышает размеры контейнера.
Disabled: Полоса прокрутки отключена.-->
		<!--x:Name="DatailsTB":
Задает имя элемента TextBlock, чтобы к нему можно было обратиться из кода (например, для изменения текста или других свойств).-->
		<!--IsVisible="False":
Указывает, что TextBlock по умолчанию скрыт (не отображается). Это может быть изменено программно, например, когда нужно показать текст.-->

		<!--закрытие окна-->
		<Button
			x:Name="Button_OK"
            Grid.Row="3"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Width="70"
            Margin="0,10,0,10"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Content="ОК" />


	</Grid>
	
</Window>
