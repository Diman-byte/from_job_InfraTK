syntax = "proto3";

option csharp_namespace = "Grpc.InfoApi";

service InfoApi{
  //Получение информации о KeyCloak
  rpc GetKeyCloakInfo(EmptyArgRequest) returns (KeyCloakInfo){}
  //Получение информации о БД проекта
  rpc GetProjectDbServerInfo(ArgRequest) returns (DataBaseServerInfo){}
  //Получение информации о БД исторических данных
  rpc GetHistoryDbServerInfo(ArgRequest) returns (DataBaseServerInfo){}
  //Получение информации о БД сообщении логов
  rpc GetMessageLogDbServerInfo(ArgRequest) returns (DataBaseServerInfo){}
  //Получение информации о БД конфигурации
  rpc GetConfigDbInfo(ArgRequest) returns (DataBaseInfo){}
  //Получние информации о БД исторических данных Cassandra
  rpc GetCassandraDbInfo(ArgRequest) returns (HistoryDbInfo){}
  //Получение информации о службах
  rpc GetServicesInfo(ArgRequest) returns (ServicesInfo){}
}

message EmptyArgRequest{}

message ArgRequest{
  string argument = 1;
}

message KeyCloakInfo{
  string baseUri = 1;
  string clientId = 2;
  string scope = 3;
  string realm = 4;
  string message = 5;
}

message DataBaseServerInfo{
  DbConfig dbConfig = 1;
  string prefix = 2;
}

message DbConfig{
  string host = 1;
  uint32 port = 2;
  string userName = 3;
  string password = 4;
  bool pooling = 5;
  string message = 6;
}

message DataBaseInfo{
  DbConfig dbConfig = 1;
  string dataBase = 2;
}

message HistoryDbInfo{
  string host = 1;
  int32 port = 2;
  string database = 3;
  string userName = 4;
  string password = 5;
  int32 commandTimeout = 6;
}

message ServicesInfo {
  repeated ServiceInfo serviceInfo = 1;
  string message = 2;
}

message ServiceInfo {
  string id = 1;
  string name = 2;
  string desc = 3;
  string host = 4;
  string port = 5;
  string serviceType = 6;
}