// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: InfoApi.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Grpc.InfoApi {
  public static partial class InfoApi
  {
    static readonly string __ServiceName = "InfoApi";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Grpc.InfoApi.EmptyArgRequest> __Marshaller_EmptyArgRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Grpc.InfoApi.EmptyArgRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Grpc.InfoApi.KeyCloakInfo> __Marshaller_KeyCloakInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Grpc.InfoApi.KeyCloakInfo.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Grpc.InfoApi.ArgRequest> __Marshaller_ArgRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Grpc.InfoApi.ArgRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Grpc.InfoApi.DataBaseServerInfo> __Marshaller_DataBaseServerInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Grpc.InfoApi.DataBaseServerInfo.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Grpc.InfoApi.DataBaseInfo> __Marshaller_DataBaseInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Grpc.InfoApi.DataBaseInfo.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Grpc.InfoApi.HistoryDbInfo> __Marshaller_HistoryDbInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Grpc.InfoApi.HistoryDbInfo.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Grpc.InfoApi.ServicesInfo> __Marshaller_ServicesInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Grpc.InfoApi.ServicesInfo.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Grpc.InfoApi.EmptyArgRequest, global::Grpc.InfoApi.KeyCloakInfo> __Method_GetKeyCloakInfo = new grpc::Method<global::Grpc.InfoApi.EmptyArgRequest, global::Grpc.InfoApi.KeyCloakInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetKeyCloakInfo",
        __Marshaller_EmptyArgRequest,
        __Marshaller_KeyCloakInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Grpc.InfoApi.ArgRequest, global::Grpc.InfoApi.DataBaseServerInfo> __Method_GetProjectDbServerInfo = new grpc::Method<global::Grpc.InfoApi.ArgRequest, global::Grpc.InfoApi.DataBaseServerInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProjectDbServerInfo",
        __Marshaller_ArgRequest,
        __Marshaller_DataBaseServerInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Grpc.InfoApi.ArgRequest, global::Grpc.InfoApi.DataBaseServerInfo> __Method_GetHistoryDbServerInfo = new grpc::Method<global::Grpc.InfoApi.ArgRequest, global::Grpc.InfoApi.DataBaseServerInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetHistoryDbServerInfo",
        __Marshaller_ArgRequest,
        __Marshaller_DataBaseServerInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Grpc.InfoApi.ArgRequest, global::Grpc.InfoApi.DataBaseServerInfo> __Method_GetMessageLogDbServerInfo = new grpc::Method<global::Grpc.InfoApi.ArgRequest, global::Grpc.InfoApi.DataBaseServerInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMessageLogDbServerInfo",
        __Marshaller_ArgRequest,
        __Marshaller_DataBaseServerInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Grpc.InfoApi.ArgRequest, global::Grpc.InfoApi.DataBaseInfo> __Method_GetConfigDbInfo = new grpc::Method<global::Grpc.InfoApi.ArgRequest, global::Grpc.InfoApi.DataBaseInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetConfigDbInfo",
        __Marshaller_ArgRequest,
        __Marshaller_DataBaseInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Grpc.InfoApi.ArgRequest, global::Grpc.InfoApi.HistoryDbInfo> __Method_GetCassandraDbInfo = new grpc::Method<global::Grpc.InfoApi.ArgRequest, global::Grpc.InfoApi.HistoryDbInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCassandraDbInfo",
        __Marshaller_ArgRequest,
        __Marshaller_HistoryDbInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Grpc.InfoApi.ArgRequest, global::Grpc.InfoApi.ServicesInfo> __Method_GetServicesInfo = new grpc::Method<global::Grpc.InfoApi.ArgRequest, global::Grpc.InfoApi.ServicesInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetServicesInfo",
        __Marshaller_ArgRequest,
        __Marshaller_ServicesInfo);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Grpc.InfoApi.InfoApiReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of InfoApi</summary>
    [grpc::BindServiceMethod(typeof(InfoApi), "BindService")]
    public abstract partial class InfoApiBase
    {
      /// <summary>
      ///Получение информации о KeyCloak
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Grpc.InfoApi.KeyCloakInfo> GetKeyCloakInfo(global::Grpc.InfoApi.EmptyArgRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Получение информации о БД проекта
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Grpc.InfoApi.DataBaseServerInfo> GetProjectDbServerInfo(global::Grpc.InfoApi.ArgRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Получение информации о БД исторических данных
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Grpc.InfoApi.DataBaseServerInfo> GetHistoryDbServerInfo(global::Grpc.InfoApi.ArgRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Получение информации о БД сообщении логов
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Grpc.InfoApi.DataBaseServerInfo> GetMessageLogDbServerInfo(global::Grpc.InfoApi.ArgRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Получение информации о БД конфигурации
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Grpc.InfoApi.DataBaseInfo> GetConfigDbInfo(global::Grpc.InfoApi.ArgRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Получние информации о БД исторических данных Cassandra
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Grpc.InfoApi.HistoryDbInfo> GetCassandraDbInfo(global::Grpc.InfoApi.ArgRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Получение информации о службах
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Grpc.InfoApi.ServicesInfo> GetServicesInfo(global::Grpc.InfoApi.ArgRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(InfoApiBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetKeyCloakInfo, serviceImpl.GetKeyCloakInfo)
          .AddMethod(__Method_GetProjectDbServerInfo, serviceImpl.GetProjectDbServerInfo)
          .AddMethod(__Method_GetHistoryDbServerInfo, serviceImpl.GetHistoryDbServerInfo)
          .AddMethod(__Method_GetMessageLogDbServerInfo, serviceImpl.GetMessageLogDbServerInfo)
          .AddMethod(__Method_GetConfigDbInfo, serviceImpl.GetConfigDbInfo)
          .AddMethod(__Method_GetCassandraDbInfo, serviceImpl.GetCassandraDbInfo)
          .AddMethod(__Method_GetServicesInfo, serviceImpl.GetServicesInfo).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, InfoApiBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetKeyCloakInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Grpc.InfoApi.EmptyArgRequest, global::Grpc.InfoApi.KeyCloakInfo>(serviceImpl.GetKeyCloakInfo));
      serviceBinder.AddMethod(__Method_GetProjectDbServerInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Grpc.InfoApi.ArgRequest, global::Grpc.InfoApi.DataBaseServerInfo>(serviceImpl.GetProjectDbServerInfo));
      serviceBinder.AddMethod(__Method_GetHistoryDbServerInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Grpc.InfoApi.ArgRequest, global::Grpc.InfoApi.DataBaseServerInfo>(serviceImpl.GetHistoryDbServerInfo));
      serviceBinder.AddMethod(__Method_GetMessageLogDbServerInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Grpc.InfoApi.ArgRequest, global::Grpc.InfoApi.DataBaseServerInfo>(serviceImpl.GetMessageLogDbServerInfo));
      serviceBinder.AddMethod(__Method_GetConfigDbInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Grpc.InfoApi.ArgRequest, global::Grpc.InfoApi.DataBaseInfo>(serviceImpl.GetConfigDbInfo));
      serviceBinder.AddMethod(__Method_GetCassandraDbInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Grpc.InfoApi.ArgRequest, global::Grpc.InfoApi.HistoryDbInfo>(serviceImpl.GetCassandraDbInfo));
      serviceBinder.AddMethod(__Method_GetServicesInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Grpc.InfoApi.ArgRequest, global::Grpc.InfoApi.ServicesInfo>(serviceImpl.GetServicesInfo));
    }

  }
}
#endregion
